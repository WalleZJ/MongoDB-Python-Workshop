Notes for building an Atlas MongoDB cluster for the workshop, Will turn this into an MD file later.

For the sample data.

After creating a project, set up a Cluster 

Build a Cluster
name it! (bottom of the page)
One time only: once your cluster is created, you won't be able to change its name.

Click on Collections

Then Load a Sample Dataset

Next, create a read-only access account

under database access

(view data tutorial)

database users

new database user

username and password
let's use "read only"

network access
to use your IP address
enter your IP address
To make it world-readable
0.0.0.0/0

now, back in your cluster, note the connection string
click on connect
connect your application
get python, 3.6 or later, and copy it
should look like this:
mongodb+srv://pymongo_workshop_user:<password>@python-mongo-workshop.unmjr.gcp.mongodb.net/<dbname>?retryWrites=true&w=majority

open up the jupyter notebook
Sample-Atlas-DB.ipynb


load your own data
the process is important, so let me go through the whole thing with you. this will require unix. 
first, let's go get some data!
https://pages.semanticscholar.org/coronavirus-research
get started
downloads
all releases
I'm looking for something small, so I'm going to download the original release, cord-19_2020-03-13.tar.gz (0.3 GB)
I have a good high speed wireless setup, but if you don't, you will be able to do this with the small subset of records
I put in the data folder.
double click on it. again, even the small one is big.
2020-13-13
expand noncomm-use-subset
unix into it


let's add these to our cluster (we'll just do a subset)

first, we need to create a new collection

next, create a user with write privs
new database user
pymongo_workshop_read_write
1DRgCQEFqFMDw4n7 (read, write, edit)
choose or generate a password
we'll go wtih write privs, but not full admin here


Next, let's create a collection and add data
go back to collections
create database
db name: covid-19-data
collection name: noncomm-subset
capped will limit the size, we can leave it blank for now
now it's there, but empty

open up noncomm-subset
you can insert a json document directly. try copy and paste
try  0036b28fddf7e93da0970303672934ea2f9944e7.json 
it's there, and mongo/atlas has added an object id for us. 
try one from the command line

	mongoimport --uri "mongodb+srv://pymongo_workshop_user:<password>@python-mongo-workshop.unmjr.gcp.mongodb.net/test" --collection noncomm-subset --file=0036b28fddf7e93da0970303672934ea2f9944e7.json
	
should see:
	1 document(s) imported successfully. 0 document(s) failed to import.

do do multiple imports, you will probably want to write a bash script. before we do, let's delete the two documents there so far (use the delete button in the collections browser).

the script is in the data directory. let's move over the first 100 files. run this from the directory holding your JSON files. (you may need to make it executable).

using this python script (in the data directory)
again, your URI endpoint will be different

import glob
import os

json_docs = glob.glob('*.json')
for f in json_docs[:1]:
    os.system('mongoimport --uri "mongodb+srv://pymongo_workshop_read_write:<password>@python-mongo-workshop.unmjr.gcp.mongodb.net/covid-19" --collection noncomm-subset --file=' + f)
    
now you can run the CORD-19-Research-Data-Set-Atlas notebook

there is one cell that won't work - you'll need to create an index to do full text search.
in clusters->collections->covid-19.noncomm-subset, go over to indexes

we'll allow a search of the body_text
create index
{
  "body_text.text": "text"
}

review and confirm. now that cell will run. 
    
    














